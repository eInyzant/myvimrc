set nocompatible              " be iMproved, required
filetype off                  " required

" General {
    set fileencoding=utf-8 " Encodage des caractères pour les fichiers
    set enc=utf-8       " Encodage utilisé par vim (conversion effectué si différent de fileencoding)
    set tenc=utf-8  " Encodage utilisé par vim (conversion effectué si différent de fileencoding)

    syntax on                   " syntax highlighting
    set mouse=a                 " automatically enable mouse usage
    set autochdir              " do not switch to the current file directory..
    set fileformat=unix
    " not every vim is compiled with this, use the following line instead
    " If you use command-t plugin, it conflicts with this, comment it out.
     "autocmd BufEnter * if bufname("") !~ "^\[A-Za-z0-9\]*://" | lcd %:p:h | endif
    "scriptencoding utf-8
    " set autowrite                  " automatically write a file when leaving a modified buffer
    set hid                         "Change buffer - without saving
    set shortmess+=filmnrxoOtT      " abbrev. of messages (avoids 'hit enter')
    set viewoptions=cursor,unix,slash " better unix / windows compatibility
    set virtualedit=onemore         " allow for cursor beyond last character
    set history=1000                " Store a ton of history (default is 20)


    " Setting up the directories {
        set backup                       " backups are nice ...
        set backupdir=$HOME/.vimbackup// " but not when they clog .
        set directory=$HOME/.vimswap//   " Same for swap files
        set viewdir=$HOME/.vimviews//    " same for view files

        " Creating directories if they don't exist
        silent execute '!mkdir -p $HOME/.vimbackup'
        silent execute '!mkdir -p $HOME/.vimswap'
        silent execute '!mkdir -p $HOME/.vimviews'
        au BufWinLeave *.* silent! mkview  "make vim save view (state) (folds, cursor, etc)
        au BufWinEnter *.* silent! loadview "make vim load view (state) (folds, cursor, etc)
    " }
" }

" Vim UI {
    colo desert                 "   load a colorscheme
    "color peachpuff
    
    set showmode                    " display the current mode

    set cursorline                  " highlight current line
    hi cursorline guibg=#EEEEEE     " highlight bg color of current line
    hi CursorColumn guibg=#EEEEEE   " highlight cursor

    if has('cmdline_info')
        set ruler                   " show the ruler
        set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%) " a ruler on steroids
        set showcmd                 " show partial commands in status line and
                                    " selected characters/lines in visual mode
    endif

    if has('statusline')
        set laststatus=2            " show statusline only if there are > 1 windows
    endif

    set backspace=indent,eol,start  " backspace for dummys
    set linespace=0                 " No extra spaces between rows
    set nu                          " Line numbers on
    set showmatch                   " show matching brackets/parenthesis
    set magic                       "Set magic on, for regular expressions
    set incsearch                   " find as you type search
    set hlsearch                    " highlight search terms
    set winminheight=0              " windows can be 0 line high
    set ignorecase                  " case insensitive search
    set smartcase                   " case sensitive when uc present
    set wildmenu                    " show list instead of just completing
    set whichwrap=b,s,h,l,<,>,[,]   " backspace and cursor keys wrap to
    set scrolljump=5                " lines to scroll when cursor leaves screen
    set scrolloff=3                 " minimum lines to keep above and below cursor
    set nofoldenable                " auto fold code
    set gdefault                    " the /g flag on :s substitutions by default

" }

" Formatting {
    set wrap                      " wrap long lines
    set autoindent                  " indent at the same level of the previous line
    set si                          "Smart indet
    set tabstop=4                   " an indentation every four columns
    set shiftwidth=4                " use indents of 4 spaces
    set softtabstop=4
    set smarttab
    set expandtab                 " tabs are tabs, not spaces
    set lbr
    set tw=500
    set matchpairs+=<:>             " match, to be used with %
    autocmd FileType html :setlocal sw=2 ts=2 sts=2
    autocmd FileType javascript :setlocal sw=2 ts=2 sts=2
" }

" Key Mappings {

    " Yank from the cursor to the end of the line, to be consistent with C and D.
    nnoremap Y y$

    let mapleader=","

    " Shortcuts
    " Change Working Directory to that of the current file
    "cmap cwd lcd %:p:h

" }
